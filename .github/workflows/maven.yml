name: Java CI with Maven

on:
  push:
    branches: [ "master" ]

jobs:
  compile:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Compile with Maven
      run: mvn compile

  security-check:
    runs-on: self-hosted
    needs: compile
    steps:
    - uses: actions/checkout@v4
    - name: Trivy installation
      run: | 
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy
    - name: Trivy FS Scan
      run: trivy fs --format table -o fs-report.json .

    - name: gitleaks installation
      run: sudo apt install gitleaks -y

    - name: gitleaks codescan
      run: gitleaks detect source . -r gitleaks-report.json -f json

  test:
    runs-on: self-hosted
    needs: security-check
    steps:
    - uses: actions/checkout@v4
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit Test Cases
      run: mvn test

  build_project_and_sonarscan:
    runs-on: self-hosted
    needs: test
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean package
    - name: upload artifact
      uses: actions/upload-artifact@v4
      with:
       name: app.jar
       path: target/*.jar

    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io
      with:
        args: >
          -Dsonar.projectKey=AshwiniEthiraj3_githubactions-devopsshack
          -Dsonar.organization=ashwiniethiraj3
          -Dsonar.sources=.
          -Dsonar.java.binaries=target

    #- name: SonarCloud Quality Gate Check
     # id: sonarqube-quality-gate-check
     # uses: SonarSource/sonarqube-quality-gate-action@master
    #  with:
    #    pollingTimeoutSec: 600
     # env:
      #  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #  SONAR_HOST_URL: https://sonarcloud.io

  build_docker_img_and_push:
   runs-on: self-hosted
   needs: build_project_and_sonarscan
   steps:
    - uses: actions/checkout@v4
    - name: Download artifact jar
      uses: actions/download-artifact@v4
      with:
       name: app.jar
       path: app #this will download jar to ./app folder
     

  
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ashwiniethiraj/springboot-githubactions

     
     
        
     
    
         
